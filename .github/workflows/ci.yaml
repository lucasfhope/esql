name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore: ['README.md', 'public/**', '.gitignore', 'Makefile', 'LICENSE']

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
        poetry-version: ["latest"]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Configure virtualenv (local)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}

      - name: Install dependencies
        run: poetry install

      - name: Run tests with PYTHONPATH set (cross-platform)
        run: |
            $Env:PYTHONPATH = "."
            poetry run pytest -v
        if: runner.os == 'Windows'
        shell: pwsh
      
      - name: Run tests with PYTHONPATH set
        run: PYTHONPATH=. poetry run pytest -v
        if: runner.os != 'Windows'
      
